on:
  push:

jobs:
  push:
    strategy:
      fail-fast: false
      matrix:
        registry: [ghcr.io]
        pre-push: ['true', 'false']
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ matrix.registry }}/${{ github.repository }}/${{ matrix.pre-push }}-${{ matrix.tag }}-${{ github.sha }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ matrix.registry }}
          username: token
          password: ${{ secrets.ALL_SCOPES_PAT }}
      -
        name: Pre-publish using docker push
        run: |
          docker pull alpine
          docker tag alpine ${{ env.IMAGE }}:pre-push
          docker push ${{ env.IMAGE }}:pre-push
        if: matrix.pre-push == 'true'
      -
        run: echo "FROM node" > Dockerfile
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE }}:latest
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

